<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.rockhoppertech</groupId>
	<artifactId>scaleapp-fx</artifactId>
	<name>scaleapp-fx</name>
	<url>http://rockhoppertech.com/</url>

	<packaging>jar</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<inceptionYear>2013</inceptionYear>
	

	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>
	<organization>
		<!-- Used as the 'Vendor' for JNLP generation -->
		<name>Rockhopper Technologies</name>
	</organization>

	<properties>
		<java.src.version>1.7</java.src.version>
		<java.target.version>1.7</java.target.version>

		<!-- so you can specify which main to run from the cmd line: -DappClassname=whatever -->
		<!-- In eclipse, add a parameter in the run configuration -->
		<appClassname>com.rockhoppertech.music.fx.scaleapp.ScaleApp</appClassname>
		
		<!-- logging -->
		<org.slf4j.version>1.7.6</org.slf4j.version>
		<logback.version>1.1.1</logback.version>

		<!-- testing -->
		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<hamcrest-all.version>1.3</hamcrest-all.version>
		<!-- other -->
		<commons-lang.version>3.2.1</commons-lang.version>
		<google-guava.version>16.0.1</google-guava.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<developers>
		<developer>
			<id>gd</id>
			<name>Gene De Lisa</name>
			<email>gene@rockhoppertech.com</email>
			<url>http://www.rockhoppertech.com/blog</url>
			<organization>Rockhopper Technologies</organization>
			<organizationUrl>http://rockhoppertech.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>-5</timezone>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:/Users/gene/Dropbox/git/scaleapp-fx.git</connection>
		<url>scm:git:/Users/gene/Dropbox/git/scaleapp-fx.git</url>
		<developerConnection>scm:git:/Users/gene/Dropbox/git/scaleapp-fx.git</developerConnection>
	</scm>

	<build>
		<finalName>${project.name}-${project.version}-r-${buildNumber}</finalName>

		<plugins>
			<plugin>
				<groupId>com.zenjava</groupId>
				<artifactId>javafx-maven-plugin</artifactId>
				<version>1.5</version>
				<configuration>

						<mainClass>${appClassname}</mainClass>

					<!-- only required if signing the jar file -->
					<keyStoreAlias>example-user</keyStoreAlias>
					<keyStorePassword>example-password</keyStorePassword>
					<permissions>
						<permission>all-permissions</permission>
					</permissions>

				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalProjectnatures>
						<projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
					</additionalProjectnatures>
					<additionalBuildcommands>
						<buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
					</additionalBuildcommands>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<source>${java.src.version}</source>
					<target>${java.target.version}</target>
					<compilerArgument>-Xlint:all</compilerArgument>
					<showWarnings>true</showWarnings>
					<showDeprecation>true</showDeprecation>
					<!-- generate line numbers for the debugger -->
					<debug>true</debug>
					<debuglevel>none</debuglevel>
				</configuration>
			</plugin>

			<!-- mvn exec:java -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<configuration>
					<mainClass>${appClassname}</mainClass>
				</configuration>
			</plugin>

			<!-- http://mojo.codehaus.org/versions-maven-plugin/usage.html -->
			<!-- mvn versions:display-property-updates mvn versions:display-plugin-updates 
				mvn versions:display-dependency-updates -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.1</version>
				<dependencies>
					<dependency>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
						<version>${junit.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<doCheck>true</doCheck>
					<doUpdate>true</doUpdate>
					<format>{0,date,MM-dd-yyyy-hh-mm-aa}</format>
					<items>
						<item>timestamp</item>
					</items>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.5</version>
				<configuration>
					<verbose>true</verbose>
				</configuration>
				<executions>
					<execution>
						<id>add-apache-headers</id>
						<goals>
							<goal>update-file-header</goal>
						</goals>
						<phase>process-sources</phase>
						<configuration>
							<licenseName>apache_v2</licenseName>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>
												update-file-header
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>


	<dependencies>
		<!-- right now, you jave to copy jre/lib/jxrt.jar to ext. see my blog post. -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>javafx</artifactId>
			<version>2.2</version>
			<systemPath>${java.home}/lib/jfxrt.jar</systemPath>
			<scope>system</scope>
		</dependency>

		<!-- Logging -->
		<!-- logback imports slf4j -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j.version}</version>
		</dependency>


		<!-- Test -->

		<!-- junit imports hamcrest but not all the matchers -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-all.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<version>${hamcrest-all.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>com.rockhoppertech</groupId>
			<artifactId>rockymusic-fx</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

	</dependencies>

</project>
